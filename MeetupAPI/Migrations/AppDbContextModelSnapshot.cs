// <auto-generated />
using System;
using MeetupAPI.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetupAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MeetupAPI.Model.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgonizer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speeker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "some description \n in few lines",
                            Location = "England, London",
                            MeetupName = "Inovations of 2017 y.",
                            Orgonizer = "admin",
                            Schedule = "[\"fees\",\"greetings\",\"microsoft stand\",\"google stand\",\"amazon stand\",\"the ending\"]",
                            Speeker = "Boris Yakovlev",
                            Theme = "Science",
                            Time = new DateTime(2017, 12, 12, 12, 12, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Polina Sozontzova`s pary for her 18th birthday",
                            Location = "pros. Mira, 24",
                            MeetupName = "Birthday party",
                            Orgonizer = "admin",
                            Schedule = "[]",
                            Speeker = "Polina Sozontzova",
                            Theme = "Entertainment",
                            Time = new DateTime(2020, 7, 24, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "The Carnival of Brazil is an annual Brazilian festival held the Friday afternoon before Ash Wednesday at noon",
                            Location = "Brazil",
                            MeetupName = "Brazil Carnival",
                            Orgonizer = "admin",
                            Schedule = "[\"Imperio Serrano\",\"Grande Rio\",\"Mosidade\",\"Unidos Da Tijuca\"]",
                            Speeker = "Porto Seguro",
                            Theme = "Entertainment",
                            Time = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
